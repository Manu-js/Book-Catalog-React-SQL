{"ast":null,"code":"import _defineProperty from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/manu/Desktop/React-Book-Catalog/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Components/Header/Index.js\";\nimport Main from \"./Components/Main/Index.js\";\nimport { booksJson } from \"./Services/ApiBook\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.getBooksSql = function (_) {\n      fetch('http://localhost:4000/books').then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          booksSQL: response.data\n        });\n      }).then(function (response) {\n        return _this.getGenres();\n      }).then(function (response) {\n        return _this.getGenresAux();\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.addBookSql = function (newBook) {\n      console.log(\"el nuevo book es: \", newBook);\n      fetch(\"http://localhost:4000/Books/add?tittle=\".concat(newBook.tittle, \"&genre1=\").concat(newBook.genres[0], \"&genre2=\").concat(newBook.genres[1], \"&genre3=\").concat(newBook.genres[2])).then(function (response) {\n        return response.json();\n      }).then(_this.getBooksSql).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      books: booksJson,\n      genres: [],\n      genresFiltered: [],\n      isLoaded: false,\n      booksSQL: []\n    };\n    _this.handleDeleteBook = _this.handleDeleteBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleModifyBook = _this.handleModifyBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNewBook = _this.handleNewBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteGenre = _this.handleDeleteGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddGenre = _this.handleAddGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectGenre = _this.handleSelectGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteAllGenre = _this.handleDeleteAllGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteAllBook = _this.handleDeleteAllBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteGlobalGenre = _this.handleDeleteGlobalGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBooksSql(); //this.getGenres();\n\n      setTimeout(function () {\n        this.setState(function (prevState) {\n          var newState = {\n            isLoaded: true\n          };\n          return newState;\n        });\n      }.bind(this), 2000);\n    }\n  }, {\n    key: \"getGenres\",\n    value: function getGenres() {\n      var auxArray = [];\n      booksJson.map(function (item) {\n        return item.genres.map(function (item) {\n          if (auxArray.indexOf(item) === -1) {\n            auxArray.push(item);\n          }\n\n          return auxArray;\n        });\n      });\n      this.setState(function (prevState) {\n        return {\n          genres: auxArray\n        };\n      });\n    }\n  }, {\n    key: \"getGenresAux\",\n    value: function getGenresAux() {\n      var auxArray = [];\n      var booksSQL = this.state.booksSQL;\n\n      for (var index = 0; index < booksSQL.length; index++) {\n        debugger;\n\n        if (auxArray.indexOf(booksSQL[index].genre) && booksSQL[index].genre != undefined) {\n          auxArray.push(booksSQL[index].genre);\n        }\n\n        if (auxArray.indexOf(booksSQL[index].genre1) && booksSQL[index].genre1 != undefined) {\n          auxArray.push(booksSQL[index].genre1);\n        }\n\n        if (auxArray.indexOf(booksSQL[index].genre2) && booksSQL[index].genre2 != undefined) {\n          auxArray.push(booksSQL[index].genre2);\n        }\n      }\n\n      debugger;\n    }\n  }, {\n    key: \"handleSelectGenre\",\n    value: function handleSelectGenre(e) {\n      var checked = e.checked,\n          value = e.value;\n      var auxArray = this.state.genresFiltered;\n\n      if (!checked) {\n        var index = auxArray.indexOf(value);\n\n        if (index !== -1) {\n          auxArray.splice(index, 1);\n        }\n      } else {\n        auxArray.push(value);\n      }\n\n      this.setState(function (prevState) {\n        return {\n          genresFiltered: auxArray\n        };\n      });\n    }\n  }, {\n    key: \"getBookList\",\n    value: function getBookList() {\n      var _this$state = this.state,\n          books = _this$state.books,\n          genresFiltered = _this$state.genresFiltered;\n      var auxVar = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = books[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var book = _step.value;\n          var found = book.genres.some(function (r) {\n            return genresFiltered.indexOf(r) >= 0;\n          });\n\n          if (found === true) {\n            auxVar.push(book);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (auxVar.length !== 0) {\n        return auxVar;\n      } else {\n        return books;\n      }\n    }\n  }, {\n    key: \"handleDeleteAllBook\",\n    value: function handleDeleteAllBook() {\n      this.setState({\n        books: []\n      });\n    }\n  }, {\n    key: \"handleModifyBook1\",\n    value: function handleModifyBook1(name, bookSelected, value) {\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            if (book.id === bookSelected.id) {\n              book = _objectSpread({}, book, _defineProperty({}, name, value));\n            }\n\n            return book;\n          })\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"handleModifyBook\",\n    value: function handleModifyBook(newBook) {\n      var _this2 = this;\n\n      var newGenreArray = this.state.genres;\n      newBook.genres.map(function (genre) {\n        if (_this2.isGenreExist(genre) === -1) {\n          newGenreArray.push(genre);\n        }\n\n        return genre;\n      });\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            if (book.id === newBook.id) {\n              book = {\n                id: newBook.id,\n                genres: newBook.genres,\n                price: newBook.price,\n                tittle: newBook.tittle\n              };\n            }\n\n            return book;\n          }),\n          genres: newGenreArray\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"handleAddGenre\",\n    value: function handleAddGenre(genre, idBook) {\n      var _this3 = this;\n\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            if (book.id === idBook) {\n              book = _objectSpread({}, book, {\n                genres: book.genres.concat(genre)\n              });\n            }\n\n            return book;\n          }),\n          genres: _this3.isGenreExist(genre) === -1 ? prevState.genres.concat(genre) : prevState.genres\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"isGenreExist\",\n    value: function isGenreExist(inputGenre) {\n      var genres = this.state.genres;\n      return genres.indexOf(inputGenre);\n    }\n  }, {\n    key: \"handleNewBook\",\n    value: function handleNewBook(newBook) {\n      var _this4 = this;\n\n      var newGenreArray = this.state.genres;\n      this.addBookSql(newBook);\n      newBook.genres.map(function (genre) {\n        if (_this4.isGenreExist(genre) === -1) {\n          newGenreArray.push(genre);\n        }\n\n        return genre;\n      });\n      newBook.id = this.state.books.length !== 0 ? this.state.books[this.state.books.length - 1].id + 1 : 0;\n      this.setState(function (prevState) {\n        return {\n          books: prevState.books.concat(newBook),\n          genres: newGenreArray\n        };\n      });\n    }\n  }, {\n    key: \"handleDeleteGenre\",\n    value: function handleDeleteGenre(idBook, genre) {\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            if (book.id === idBook) {\n              book = _objectSpread({}, book, {\n                genres: genre\n              });\n            }\n\n            return book;\n          })\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"handleDeleteGlobalGenre\",\n    value: function handleDeleteGlobalGenre(genreToDelete) {\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            book = _objectSpread({}, book, {\n              genres: book.genres.filter(function (genre) {\n                return genre !== genreToDelete;\n              })\n            });\n            return book;\n          }),\n          genres: prevState.genres.filter(function (genre) {\n            return genre !== genreToDelete;\n          })\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"handleDeleteAllGenre\",\n    value: function handleDeleteAllGenre() {\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            book = _objectSpread({}, book, {\n              genres: []\n            });\n            return book;\n          }),\n          genres: []\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"handleDeleteBook\",\n    value: function handleDeleteBook(idBook) {\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.filter(function (book) {\n            return book.id !== parseInt(idBook);\n          })\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          booksSQL = _this$state2.booksSQL,\n          genres = _this$state2.genres,\n          genresFiltered = _this$state2.genresFiltered,\n          isLoaded = _this$state2.isLoaded;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), React.createElement(Main, {\n        books: this.getBookList(),\n        genres: genres,\n        genresFiltered: genresFiltered,\n        isLoaded: isLoaded,\n        handleSelectGenre: this.handleSelectGenre,\n        handleDeleteAllGenre: this.handleDeleteAllGenre,\n        handleAddGenre: this.handleAddGenre,\n        handleDeleteBook: this.handleDeleteBook,\n        handleModifyBook: this.handleModifyBook,\n        handleDeleteGenre: this.handleDeleteGenre,\n        handleNewBook: this.handleNewBook,\n        handleDeleteAllBook: this.handleDeleteAllBook,\n        handleDeleteGlobalGenre: this.handleDeleteGlobalGenre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/manu/Desktop/React-Book-Catalog/src/App.js"],"names":["React","Component","Header","Main","booksJson","App","props","getBooksSql","_","fetch","then","response","json","setState","booksSQL","data","getGenres","getGenresAux","catch","err","console","error","addBookSql","newBook","log","tittle","genres","state","books","genresFiltered","isLoaded","handleDeleteBook","bind","handleModifyBook","handleNewBook","handleDeleteGenre","handleAddGenre","handleSelectGenre","handleDeleteAllGenre","handleDeleteAllBook","handleDeleteGlobalGenre","setTimeout","prevState","newState","auxArray","map","item","indexOf","push","index","length","genre","undefined","genre1","genre2","e","checked","value","splice","auxVar","book","found","some","r","name","bookSelected","id","newGenreArray","isGenreExist","price","idBook","concat","inputGenre","genreToDelete","filter","parseInt","getBookList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./Components/Header/Index.js\";\nimport Main from \"./Components/Main/Index.js\";\nimport { booksJson } from \"./Services/ApiBook\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: booksJson,\n      genres: [],\n      genresFiltered: [],\n      isLoaded: false,\n      booksSQL: []\n    };\n    this.handleDeleteBook = this.handleDeleteBook.bind(this);\n    this.handleModifyBook = this.handleModifyBook.bind(this);\n    this.handleNewBook = this.handleNewBook.bind(this);\n    this.handleDeleteGenre = this.handleDeleteGenre.bind(this);\n    this.handleAddGenre = this.handleAddGenre.bind(this);\n    this.handleSelectGenre = this.handleSelectGenre.bind(this);\n    this.handleDeleteAllGenre = this.handleDeleteAllGenre.bind(this);\n    this.handleDeleteAllBook = this.handleDeleteAllBook.bind(this);\n    this.handleDeleteGlobalGenre = this.handleDeleteGlobalGenre.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBooksSql();\n    //this.getGenres();\n    setTimeout(\n      function() {\n        this.setState(prevState => {\n          const newState = {\n            isLoaded: true\n          };\n          return newState;\n        });\n      }.bind(this),\n      2000\n    );\n  }\n\n  getGenres() {\n    const auxArray = [];\n    booksJson.map(item => {\n      return item.genres.map(item => {\n        if (auxArray.indexOf(item) === -1) {\n          auxArray.push(item);\n        }\n        return auxArray;\n      });\n    });\n    this.setState(prevState => ({\n      genres: auxArray\n    }));\n  }\n getGenresAux(){\n  const auxArray =[];\n  const { booksSQL } = this.state;\n  for (let index = 0; index < booksSQL.length; index++) {\ndebugger;\n    if (auxArray.indexOf(booksSQL[index].genre) && booksSQL[index].genre != undefined){\n      auxArray.push(booksSQL[index].genre);\n    }\n    if (auxArray.indexOf(booksSQL[index].genre1) && booksSQL[index].genre1 != undefined){\n      auxArray.push(booksSQL[index].genre1);\n    }\n    if (auxArray.indexOf(booksSQL[index].genre2) && booksSQL[index].genre2 != undefined){\n      auxArray.push(booksSQL[index].genre2);\n    }\n  }\n  debugger;\n\n }\n\n  handleSelectGenre(e) {\n    const { checked, value } = e;\n    let auxArray = this.state.genresFiltered;\n    if (!checked) {\n      var index = auxArray.indexOf(value);\n      if (index !== -1) {\n        auxArray.splice(index, 1);\n      }\n    } else {\n      auxArray.push(value);\n    }\n    this.setState(prevState => ({\n      genresFiltered: auxArray\n    }));\n  }\n\n  getBookList() {\n    const { books, genresFiltered } = this.state;\n    let auxVar = [];\n    for (const book of books) {\n      const found = book.genres.some(r => genresFiltered.indexOf(r) >= 0);\n      if (found === true) {\n        auxVar.push(book);\n      }\n    }\n    if (auxVar.length !== 0) {\n      return auxVar;\n    } else {\n      return books;\n    }\n  }\n\n  handleDeleteAllBook() {\n    this.setState({ books: [] });\n  }\n\n  handleModifyBook1(name, bookSelected, value) {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          if (book.id === bookSelected.id) {\n            book = {\n              ...book,\n              [name]: value\n            };\n          }\n          return book;\n        })\n      };\n      return newState;\n    });\n  }\n\n  handleModifyBook(newBook) {\n    let newGenreArray = this.state.genres;\n    newBook.genres.map(genre => {\n      if (this.isGenreExist(genre) === -1) {\n        newGenreArray.push(genre);\n      }\n      return genre;\n    });\n\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          if (book.id === newBook.id) {\n            book = {\n              id: newBook.id,\n              genres: newBook.genres,\n              price: newBook.price,\n              tittle: newBook.tittle\n            };\n          }\n          return book;\n        }),\n        genres: newGenreArray\n      };\n      return newState;\n    });\n  }\n\n  handleAddGenre(genre, idBook) {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          if (book.id === idBook) {\n            book = {\n              ...book,\n              genres: book.genres.concat(genre)\n            };\n          }\n          return book;\n        }),\n        genres:\n          this.isGenreExist(genre) === -1\n            ? prevState.genres.concat(genre)\n            : prevState.genres\n      };\n      return newState;\n    });\n  }\n\n  isGenreExist(inputGenre) {\n    const genres = this.state.genres;\n    return genres.indexOf(inputGenre);\n  }\n  \n  handleNewBook(newBook) {\n    let newGenreArray = this.state.genres;\n    this.addBookSql(newBook)\n    newBook.genres.map(genre => {\n      if (this.isGenreExist(genre) === -1) {\n        newGenreArray.push(genre);\n      }\n      return genre;\n    });\n    newBook.id =\n      this.state.books.length !== 0\n        ? this.state.books[this.state.books.length - 1].id + 1\n        : 0;\n    this.setState(prevState => ({\n      books: prevState.books.concat(newBook),\n      genres: newGenreArray\n    }));\n  }\n\n  handleDeleteGenre(idBook, genre) {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          if (book.id === idBook) {\n            book = {\n              ...book,\n              genres: genre\n            };\n          }\n          return book;\n        })\n      };\n      return newState;\n    });\n  }\n\n  handleDeleteGlobalGenre(genreToDelete) {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          book = {\n            ...book,\n            genres: book.genres.filter(function(genre) {\n              return genre !== genreToDelete;\n            })\n          };\n\n          return book;\n        }),\n        genres: prevState.genres.filter(function(genre) {\n          return genre !== genreToDelete;\n        })\n      };\n      return newState;\n    });\n  }\n\n  handleDeleteAllGenre() {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          book = {\n            ...book,\n            genres: []\n          };\n\n          return book;\n        }),\n        genres: []\n      };\n      return newState;\n    });\n  }\n\n  handleDeleteBook(idBook) {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.filter(book => book.id !== parseInt(idBook))\n      };\n      return newState;\n    });\n  }\n\n  getBooksSql = _ => {\n    \n    fetch('http://localhost:4000/books')\n      .then(response => response.json())\n      .then(response => this.setState({ booksSQL: response.data}))\n      .then(response => this.getGenres())\n      .then(response => this.getGenresAux())\n      .catch(err => console.error(err))\n  }\n\n  addBookSql = (newBook) => {\n    console.log(\"el nuevo book es: \",newBook);\n    fetch(`http://localhost:4000/Books/add?tittle=${newBook.tittle}&genre1=${newBook.genres[0]}&genre2=${newBook.genres[1]}&genre3=${newBook.genres[2]}`)\n      .then(response => response.json())\n      .then(this.getBooksSql)\n      .catch((err => console.log(err)))\n  }\n\n  render() {\n    const { booksSQL ,genres, genresFiltered, isLoaded } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <Main\n          books={this.getBookList()}\n          genres={genres}\n          genresFiltered={genresFiltered}\n          isLoaded={isLoaded}\n          handleSelectGenre={this.handleSelectGenre}\n          handleDeleteAllGenre={this.handleDeleteAllGenre}\n          handleAddGenre={this.handleAddGenre}\n          handleDeleteBook={this.handleDeleteBook}\n          handleModifyBook={this.handleModifyBook}\n          handleDeleteGenre={this.handleDeleteGenre}\n          handleNewBook={this.handleNewBook}\n          handleDeleteAllBook={this.handleDeleteAllBook}\n          handleDeleteGlobalGenre={this.handleDeleteGlobalGenre}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}