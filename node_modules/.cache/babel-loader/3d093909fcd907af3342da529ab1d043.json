{"ast":null,"code":"import _defineProperty from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/manu/Desktop/React-Book-Catalog/src/Components/Books/ModalEditBook/Index.js\";\nimport React, { Component } from \"react\";\nimport GenreList from \"../GenreList/Index\";\nimport AddGenre from \"../AddGenre/Index\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport \"./ModalEditBook.css\";\n\nvar ModalEditBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalEditBook, _Component);\n\n  function ModalEditBook(props) {\n    var _this;\n\n    _classCallCheck(this, ModalEditBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalEditBook).call(this, props));\n    _this.state = {\n      open: false,\n      visibleView: false,\n      newBookData: {\n        tittle: \"\",\n        price: \"\",\n        genres: [],\n        id: null\n      }\n    };\n\n    _this.handleClickOpen = function () {\n      var bookSelected = _this.props.bookSelected;\n\n      _this.setState({\n        open: true,\n        newBookData: auxBook\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.onBookUpdate = _this.onBookUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteThisBook = _this.deleteThisBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddNewGenre = _this.handleAddNewGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteGenre = _this.handleDeleteGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ModalEditBook, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var bookSelected = this.props.bookSelected;\n      var auxBook = [];\n      auxBook.tittle = bookSelected.tittle;\n      auxBook.price = bookSelected.price;\n      auxBook.id = bookSelected.idBooks;\n      auxBook.genres = [];\n\n      if (bookSelected.genre1 !== null) {\n        auxBook.genres.push(bookSelected.genre1);\n      }\n\n      if (bookSelected.genre2 !== null) {\n        auxBook.genres.push(bookSelected.genre2);\n      }\n\n      if (bookSelected.genre3 !== null) {\n        auxBook.genres.push(bookSelected.genre3);\n      }\n\n      console.log(\"montamos\");\n      this.setState({\n        newBookData: auxBook\n      });\n    }\n  }, {\n    key: \"deleteThisBook\",\n    value: function deleteThisBook() {\n      var _this$props = this.props,\n          handleDeleteBook = _this$props.handleDeleteBook,\n          bookSelected = _this$props.bookSelected;\n      handleDeleteBook(bookSelected.idBooks);\n    }\n  }, {\n    key: \"onBookUpdate\",\n    value: function onBookUpdate(e) {\n      var handleModifyBook = this.props.handleModifyBook;\n      handleModifyBook(this.state.newBookData);\n      this.handleClose();\n    }\n  }, {\n    key: \"handleAddNewGenre\",\n    value: function handleAddNewGenre(text) {\n      this.setState(function (prevState) {\n        var newState = {\n          newBookData: _objectSpread({}, prevState.newBookData, {\n            genres: prevState.newBookData.genres.concat(text)\n          })\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"updateInputValue\",\n    value: function updateInputValue(e) {\n      var newBookData = this.state.newBookData;\n      this.setState({\n        newBookData: _objectSpread({}, newBookData, _defineProperty({}, e.target.name, e.target.value))\n      });\n    }\n  }, {\n    key: \"handleDeleteGenre\",\n    value: function handleDeleteGenre(idBook, genre) {\n      console.log(genre);\n      this.setState(function (prevState) {\n        var newState = {\n          newBookData: _objectSpread({}, prevState.newBookData, {\n            genres: genre\n          })\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"showNewGenre\",\n    value: function showNewGenre() {\n      this.setState({\n        visibleView: true\n      });\n    }\n  }, {\n    key: \"hideNewGenre\",\n    value: function hideNewGenre() {\n      this.setState({\n        visibleView: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var bookSelected = this.props.bookSelected;\n      return React.createElement(\"div\", {\n        className: \"editButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Modify Book\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"tittle\",\n        label: \"Tittle\",\n        name: \"tittle\",\n        value: this.state.newBookData.tittle,\n        onChange: function onChange(evt) {\n          return _this2.updateInputValue(evt);\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        type: \"number\",\n        id: \"price\",\n        label: \"Price\",\n        name: \"price\",\n        value: this.state.newBookData.price,\n        onChange: function onChange(evt) {\n          return _this2.updateInputValue(evt);\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(GenreList, {\n        selectBook: this.state.newBookData,\n        newBook: this.state.newBookData,\n        handleAddGenre: this.handleAddNewGenre,\n        handleDeleteGenre: this.handleDeleteGenre,\n        editOption: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(AddGenre, {\n        selectBook: this.state.newBookData,\n        handleAddGenre: this.handleAddNewGenre,\n        genres: this.state.newBookData.genres,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.deleteThisBook,\n        id: bookSelected.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Delete Book\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.onBookUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Accept\"))));\n    }\n  }]);\n\n  return ModalEditBook;\n}(Component);\n\nexport default ModalEditBook;","map":{"version":3,"sources":["/Users/manu/Desktop/React-Book-Catalog/src/Components/Books/ModalEditBook/Index.js"],"names":["React","Component","GenreList","AddGenre","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","EditIcon","ModalEditBook","props","state","open","visibleView","newBookData","tittle","price","genres","id","handleClickOpen","bookSelected","setState","auxBook","handleClose","onBookUpdate","bind","deleteThisBook","handleAddNewGenre","handleDeleteGenre","idBooks","genre1","push","genre2","genre3","console","log","handleDeleteBook","e","handleModifyBook","text","prevState","newState","concat","target","name","value","idBook","genre","evt","updateInputValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport GenreList from \"../GenreList/Index\";\nimport AddGenre from \"../AddGenre/Index\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport \"./ModalEditBook.css\";\n\nclass ModalEditBook extends Component {\n  constructor(props) {\n    super(props);\n    this.onBookUpdate = this.onBookUpdate.bind(this);\n    this.deleteThisBook = this.deleteThisBook.bind(this);\n    this.handleAddNewGenre = this.handleAddNewGenre.bind(this);\n    this.handleDeleteGenre = this.handleDeleteGenre.bind(this);\n  }\n  state = {\n    open: false,\n    visibleView: false,\n    newBookData: {\n      tittle: \"\",\n      price: \"\",\n      genres: [],\n      id: null,\n    }\n  };\n\n\n\n  componentDidMount() {\n    const { bookSelected } = this.props;\n    let auxBook = [];\n    \n    auxBook.tittle = bookSelected.tittle;\n    auxBook.price = bookSelected.price;\n    auxBook.id = bookSelected.idBooks;\n    auxBook.genres = [];\n    if(bookSelected.genre1 !== null){\n      auxBook.genres.push(bookSelected.genre1)\n    }\n    if(bookSelected.genre2 !== null){\n      auxBook.genres.push(bookSelected.genre2)\n    }\n    if(bookSelected.genre3 !== null){\n      auxBook.genres.push(bookSelected.genre3)\n    }\n    console.log(\"montamos\");\n    this.setState({ newBookData: auxBook });\n  }\n  deleteThisBook() {\n    const { handleDeleteBook, bookSelected } = this.props;\n    handleDeleteBook(bookSelected.idBooks);\n  }\n\n  onBookUpdate(e) {\n    const { handleModifyBook } = this.props;\n    handleModifyBook(this.state.newBookData);\n    this.handleClose();\n  }\n  handleAddNewGenre(text) {\n    this.setState(prevState => {\n      const newState = {\n        newBookData: {\n          ...prevState.newBookData,\n          genres: prevState.newBookData.genres.concat(text)\n        }\n      };\n      return newState;\n    });\n  }\n\n  updateInputValue(e) {\n    const { newBookData } = this.state;\n    this.setState({\n      newBookData: {\n        ...newBookData,\n        [e.target.name]: e.target.value\n      }\n    });\n  }\n  handleDeleteGenre(idBook, genre) {\n    console.log(genre);\n    this.setState(prevState => {\n      const newState = {\n        newBookData: {\n          ...prevState.newBookData,\n          genres: genre\n        }\n      };\n      return newState;\n    });\n  }\n\n  handleClickOpen = () => {\n    const { bookSelected } = this.props;\n\n    this.setState({ open: true,\n      newBookData: auxBook });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  showNewGenre() {\n    this.setState({ visibleView: true });\n  }\n  hideNewGenre() {\n    this.setState({ visibleView: false });\n  }\n\n  render() {\n    const { bookSelected } = this.props;\n\n    return (\n      <div className=\"editButton\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.handleClickOpen}\n        >\n          <EditIcon />\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Modify Book</DialogTitle>\n          <DialogContent>\n            <TextField\n              id=\"tittle\"\n              label=\"Tittle\"\n              name=\"tittle\"\n              value={this.state.newBookData.tittle}\n              onChange={evt => this.updateInputValue(evt)}\n              margin=\"normal\"\n              fullWidth\n            />\n            <TextField\n              type=\"number\"\n              id=\"price\"\n              label=\"Price\"\n              name=\"price\"\n              value={this.state.newBookData.price}\n              onChange={evt => this.updateInputValue(evt)}\n              margin=\"normal\"\n              fullWidth\n            />\n\n            <GenreList\n              selectBook={this.state.newBookData}\n              newBook={this.state.newBookData}\n\n              handleAddGenre={this.handleAddNewGenre}\n              handleDeleteGenre={this.handleDeleteGenre}\n              editOption={true}\n            />\n            <AddGenre\n              selectBook={this.state.newBookData}\n              handleAddGenre={this.handleAddNewGenre}\n              genres={this.state.newBookData.genres}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.deleteThisBook}\n              id={bookSelected.id}\n            >\n              Delete Book\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.onBookUpdate}\n            >\n              Accept\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default ModalEditBook;\n"]},"metadata":{},"sourceType":"module"}