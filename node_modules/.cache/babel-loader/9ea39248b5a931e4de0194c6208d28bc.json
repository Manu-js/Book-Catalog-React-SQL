{"ast":null,"code":"import _regeneratorRuntime from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/manu/Desktop/React-Book-Catalog/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Components/Header/Index.js\";\nimport Main from \"./Components/Main/Index.js\";\nimport { booksJson } from \"./Services/ApiBook\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.getBooksSql = function (_) {\n      fetch('http://localhost:4000/books').then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          booksSQL: response.data\n        });\n      }) //.then(response => this.getGenres())\n      .then(function (response) {\n        return _this.getGenresAux();\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.addBookSql = function (newBook) {\n      var auxCall = \"http://localhost:4000/Books/add?tittle=\".concat(newBook.tittle);\n\n      if (newBook.genres[0] !== undefined) {\n        auxCall += \"&genre1=\" + newBook.genres[0] + \"\";\n      }\n\n      if (newBook.genres[1] !== undefined) {\n        auxCall += \"&genre2=\" + newBook.genres[1] + \"\";\n      }\n\n      if (newBook.genres[2] !== undefined) {\n        auxCall += \"&genre3=\" + newBook.genres[2] + \"\";\n      }\n\n      fetch(auxCall).then(function (response) {\n        return response.json();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBookSql = function (bookId) {\n      fetch(\"http://localhost:4000/Books/delete?id=\".concat(bookId)).then(function (response) {\n        return response.json();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.updateBookSql = function (bookEditData) {\n      var auxCall = \"http://localhost:4000/Books/update?id=\".concat(bookEditData.id, \"&tittle=\").concat(bookEditData.tittle);\n\n      if (bookEditData.genres[0] !== undefined) {\n        auxCall += \"&genre1=\" + bookEditData.genres[0] + \"\";\n      }\n\n      if (bookEditData.genres[1] !== undefined) {\n        auxCall += \"&genre2=\" + bookEditData.genres[1] + \"\";\n      }\n\n      if (bookEditData.genres[2] !== undefined) {\n        auxCall += \"&genre3=\" + bookEditData.genres[2] + \"\";\n      }\n\n      fetch(auxCall).then(function (response) {\n        return response.json();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      books: booksJson,\n      genres: [],\n      genresFiltered: [],\n      isLoaded: false,\n      booksSQL: []\n    };\n    _this.handleDeleteBook = _this.handleDeleteBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleModifyBook = _this.handleModifyBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNewBook = _this.handleNewBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteGenre = _this.handleDeleteGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddGenre = _this.handleAddGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectGenre = _this.handleSelectGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteAllGenre = _this.handleDeleteAllGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteAllBook = _this.handleDeleteAllBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteGlobalGenre = _this.handleDeleteGlobalGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBooksSql(); //this.getGenres();\n\n      setTimeout(function () {\n        this.setState(function (prevState) {\n          var newState = {\n            isLoaded: true\n          };\n          return newState;\n        });\n      }.bind(this), 2000);\n    }\n  }, {\n    key: \"getGenres\",\n    value: function getGenres() {\n      var auxArray = [];\n      booksJson.map(function (item) {\n        return item.genres.map(function (item) {\n          if (auxArray.indexOf(item) === -1) {\n            auxArray.push(item);\n          }\n\n          return auxArray;\n        });\n      });\n      this.setState(function (prevState) {\n        return {\n          genres: auxArray\n        };\n      });\n    }\n  }, {\n    key: \"getGenresAux\",\n    value: function getGenresAux() {\n      var auxArray = [];\n      var booksSQL = this.state.booksSQL;\n\n      for (var index = 0; index < booksSQL.length; index++) {\n        if (auxArray.indexOf(booksSQL[index].genre1) === -1 && booksSQL[index].genre1 != \"undefined\") {\n          auxArray.push(booksSQL[index].genre1);\n        }\n\n        if (auxArray.indexOf(booksSQL[index].genre2) === -1 && booksSQL[index].genre2 != \"undefined\") {\n          auxArray.push(booksSQL[index].genre2);\n        }\n\n        if (auxArray.indexOf(booksSQL[index].genre3) === -1 && booksSQL[index].genre3 != \"undefined\") {\n          auxArray.push(booksSQL[index].genre3);\n        }\n      }\n\n      this.setState(function (prevState) {\n        return {\n          genres: auxArray\n        };\n      });\n    }\n  }, {\n    key: \"handleSelectGenre\",\n    value: function handleSelectGenre(e) {\n      var checked = e.checked,\n          value = e.value;\n      var auxArray = this.state.genresFiltered;\n\n      if (!checked) {\n        var index = auxArray.indexOf(value);\n\n        if (index !== -1) {\n          auxArray.splice(index, 1);\n        }\n      } else {\n        auxArray.push(value);\n      }\n\n      this.setState(function (prevState) {\n        return {\n          genresFiltered: auxArray\n        };\n      });\n    }\n  }, {\n    key: \"getArrayGenresBook\",\n    value: function getArrayGenresBook(book) {\n      var auxArray = [];\n\n      if (book.genre1 !== \"undefined\") {\n        auxArray.push(book.genre1);\n      }\n\n      if (book.genre2 !== \"undefined\") {\n        auxArray.push(book.genre2);\n      }\n\n      if (book.genre3 !== \"undefined\") {\n        auxArray.push(book.genre3);\n      }\n\n      return auxArray;\n    }\n  }, {\n    key: \"getBookList\",\n    value: function getBookList() {\n      var _this$state = this.state,\n          booksSQL = _this$state.booksSQL,\n          genresFiltered = _this$state.genresFiltered;\n      var auxVar = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = booksSQL[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var book = _step.value;\n          var genreArrayAux = this.getArrayGenresBook(book);\n          var found = genreArrayAux.some(function (r) {\n            return genresFiltered.indexOf(r) >= 0;\n          });\n\n          if (found === true) {\n            auxVar.push(book);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (auxVar.length !== 0) {\n        return auxVar;\n      } else {\n        return booksSQL;\n      }\n    }\n  }, {\n    key: \"handleDeleteAllBook\",\n    value: function handleDeleteAllBook() {\n      this.setState({\n        books: []\n      });\n    }\n  }, {\n    key: \"handleModifyBook1\",\n    value: function handleModifyBook1(name, bookSelected, value) {\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            if (book.id === bookSelected.id) {\n              book = _objectSpread({}, book, _defineProperty({}, name, value));\n            }\n\n            return book;\n          })\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"handleModifyBook\",\n    value: function () {\n      var _handleModifyBook = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(newBook) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.updateBookSql(newBook);\n\n              case 2:\n                this.getBooksSql(); // let newGenreArray = this.state.genres;\n                // newBook.genres.map(genre => {\n                //   if (this.isGenreExist(genre) === -1) {\n                //     newGenreArray.push(genre);\n                //   }\n                //   return genre;\n                // });\n                // this.setState(prevState => {\n                //   const newState = {\n                //     books: prevState.books.map((book, index) => {\n                //       if (book.id === newBook.id) {\n                //         book = {\n                //           id: newBook.id,\n                //           genres: newBook.genres,\n                //           price: newBook.price,\n                //           tittle: newBook.tittle\n                //         };\n                //       }\n                //       return book;\n                //     }),\n                //     genres: newGenreArray\n                //   };\n                //   return newState;\n                // });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleModifyBook(_x) {\n        return _handleModifyBook.apply(this, arguments);\n      }\n\n      return handleModifyBook;\n    }()\n  }, {\n    key: \"handleAddGenre\",\n    value: function handleAddGenre(genre, idBook) {\n      var _this2 = this;\n\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            if (book.id === idBook) {\n              book = _objectSpread({}, book, {\n                genres: book.genres.concat(genre)\n              });\n            }\n\n            return book;\n          }),\n          genres: _this2.isGenreExist(genre) === -1 ? prevState.genres.concat(genre) : prevState.genres\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"isGenreExist\",\n    value: function isGenreExist(inputGenre) {\n      var genres = this.state.genres;\n      return genres.indexOf(inputGenre);\n    }\n  }, {\n    key: \"handleNewBook\",\n    value: function () {\n      var _handleNewBook = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(newBook) {\n        var newGenreArray;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                newGenreArray = this.state.genres;\n                _context2.next = 3;\n                return this.addBookSql(newBook);\n\n              case 3:\n                this.getBooksSql(); // this.getBooksSql();\n                // newBook.genres.map(genre => {\n                //   if (this.isGenreExist(genre) === -1) {\n                //     newGenreArray.push(genre);\n                //   }\n                //   return genre;\n                // });\n                // newBook.id =\n                //   this.state.books.length !== 0\n                //     ? this.state.books[this.state.books.length - 1].id + 1\n                //     : 0;\n                // this.setState(prevState => ({\n                //   books: prevState.books.concat(newBook),\n                //   genres: newGenreArray\n                // }));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleNewBook(_x2) {\n        return _handleNewBook.apply(this, arguments);\n      }\n\n      return handleNewBook;\n    }()\n  }, {\n    key: \"handleDeleteGenre\",\n    value: function handleDeleteGenre(idBook, genre) {\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            if (book.id === idBook) {\n              book = _objectSpread({}, book, {\n                genres: genre\n              });\n            }\n\n            return book;\n          })\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"handleDeleteGlobalGenre\",\n    value: function handleDeleteGlobalGenre(genreToDelete) {\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            book = _objectSpread({}, book, {\n              genres: book.genres.filter(function (genre) {\n                return genre !== genreToDelete;\n              })\n            });\n            return book;\n          }),\n          genres: prevState.genres.filter(function (genre) {\n            return genre !== genreToDelete;\n          })\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"handleDeleteAllGenre\",\n    value: function handleDeleteAllGenre() {\n      this.setState(function (prevState) {\n        var newState = {\n          books: prevState.books.map(function (book, index) {\n            book = _objectSpread({}, book, {\n              genres: []\n            });\n            return book;\n          }),\n          genres: []\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"handleDeleteBook\",\n    value: function () {\n      var _handleDeleteBook = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(idBook) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.deleteBookSql(idBook);\n\n              case 2:\n                this.getBooksSql(); // this.getBooksSql();\n                // this.setState(prevState => {\n                //   const newState = {\n                //     books: prevState.books.filter(book => book.id !== parseInt(idBook))\n                //   };\n                //   return newState;\n                // });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleDeleteBook(_x3) {\n        return _handleDeleteBook.apply(this, arguments);\n      }\n\n      return handleDeleteBook;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          booksSQL = _this$state2.booksSQL,\n          genres = _this$state2.genres,\n          genresFiltered = _this$state2.genresFiltered,\n          isLoaded = _this$state2.isLoaded;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(Main, {\n        books: this.getBookList(),\n        booksSQL: this.getBookList(),\n        genres: genres,\n        genresFiltered: genresFiltered,\n        isLoaded: isLoaded,\n        handleSelectGenre: this.handleSelectGenre,\n        handleDeleteAllGenre: this.handleDeleteAllGenre,\n        handleAddGenre: this.handleAddGenre,\n        handleDeleteBook: this.handleDeleteBook,\n        handleModifyBook: this.handleModifyBook,\n        handleDeleteGenre: this.handleDeleteGenre,\n        handleNewBook: this.handleNewBook,\n        handleDeleteAllBook: this.handleDeleteAllBook,\n        handleDeleteGlobalGenre: this.handleDeleteGlobalGenre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/manu/Desktop/React-Book-Catalog/src/App.js"],"names":["React","Component","Header","Main","booksJson","App","props","getBooksSql","_","fetch","then","response","json","setState","booksSQL","data","getGenresAux","catch","err","console","error","addBookSql","newBook","auxCall","tittle","genres","undefined","log","deleteBookSql","bookId","updateBookSql","bookEditData","id","state","books","genresFiltered","isLoaded","handleDeleteBook","bind","handleModifyBook","handleNewBook","handleDeleteGenre","handleAddGenre","handleSelectGenre","handleDeleteAllGenre","handleDeleteAllBook","handleDeleteGlobalGenre","setTimeout","prevState","newState","auxArray","map","item","indexOf","push","index","length","genre1","genre2","genre3","e","checked","value","splice","book","auxVar","genreArrayAux","getArrayGenresBook","found","some","r","name","bookSelected","genre","idBook","concat","isGenreExist","inputGenre","newGenreArray","genreToDelete","filter","getBookList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./Components/Header/Index.js\";\nimport Main from \"./Components/Main/Index.js\";\nimport { booksJson } from \"./Services/ApiBook\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: booksJson,\n      genres: [],\n      genresFiltered: [],\n      isLoaded: false,\n      booksSQL: []\n    };\n    this.handleDeleteBook = this.handleDeleteBook.bind(this);\n    this.handleModifyBook = this.handleModifyBook.bind(this);\n    this.handleNewBook = this.handleNewBook.bind(this);\n    this.handleDeleteGenre = this.handleDeleteGenre.bind(this);\n    this.handleAddGenre = this.handleAddGenre.bind(this);\n    this.handleSelectGenre = this.handleSelectGenre.bind(this);\n    this.handleDeleteAllGenre = this.handleDeleteAllGenre.bind(this);\n    this.handleDeleteAllBook = this.handleDeleteAllBook.bind(this);\n    this.handleDeleteGlobalGenre = this.handleDeleteGlobalGenre.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBooksSql();\n    //this.getGenres();\n    setTimeout(\n      function() {\n        this.setState(prevState => {\n          const newState = {\n            isLoaded: true\n          };\n          return newState;\n        });\n      }.bind(this),\n      2000\n    );\n  }\n\n  getGenres() {\n    const auxArray = [];\n    booksJson.map(item => {\n      return item.genres.map(item => {\n        if (auxArray.indexOf(item) === -1) {\n          auxArray.push(item);\n        }\n        return auxArray;\n      });\n    });\n    this.setState(prevState => ({\n      genres: auxArray\n    }));\n  }\n getGenresAux(){\n  const auxArray =[];\n  const { booksSQL } = this.state;\n  for (let index = 0; index < booksSQL.length; index++) {\n    if (auxArray.indexOf(booksSQL[index].genre1) === -1 && booksSQL[index].genre1 != \"undefined\"){\n      auxArray.push(booksSQL[index].genre1);\n    }\n    if (auxArray.indexOf(booksSQL[index].genre2) === -1 && booksSQL[index].genre2 != \"undefined\"){\n      auxArray.push(booksSQL[index].genre2);\n    }\n    if (auxArray.indexOf(booksSQL[index].genre3) === -1 && booksSQL[index].genre3 != \"undefined\"){\n      auxArray.push(booksSQL[index].genre3);\n    }\n  }\n  this.setState(prevState => ({\n    genres: auxArray\n  }));\n }\n\n  handleSelectGenre(e) {\n    const { checked, value } = e;\n    let auxArray = this.state.genresFiltered;\n    if (!checked) {\n      var index = auxArray.indexOf(value);\n      if (index !== -1) {\n        auxArray.splice(index, 1);\n      }\n    } else {\n      auxArray.push(value);\n    }\n    this.setState(prevState => ({\n      genresFiltered: auxArray\n    }));\n  }\n\n  getArrayGenresBook(book){\n    const auxArray =[];\n    if (book.genre1 !== \"undefined\"){\n      auxArray.push(book.genre1);\n    }    \n    if (book.genre2 !== \"undefined\"){\n      auxArray.push(book.genre2);\n    }    \n    if (book.genre3 !== \"undefined\"){\n      auxArray.push(book.genre3);\n    }   \n    return auxArray;\n  }\n\n  getBookList() {\n    const { booksSQL, genresFiltered } = this.state;\n    let auxVar = [];\n    for (const book of booksSQL) {\n      const genreArrayAux  = this.getArrayGenresBook(book)\n      const found = genreArrayAux.some(r => genresFiltered.indexOf(r) >= 0);\n\n      if (found === true) {\n        auxVar.push(book);\n      }\n    }\n    if (auxVar.length !== 0) {\n      return auxVar;\n    } else {\n      return booksSQL;\n    }\n  }\n\n  handleDeleteAllBook() {\n    this.setState({ books: [] });\n  }\n\n  handleModifyBook1(name, bookSelected, value) {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          if (book.id === bookSelected.id) {\n            book = {\n              ...book,\n              [name]: value\n            };\n          }\n          return book;\n        })\n      };\n      return newState;\n    });\n  }\n  \n  async handleModifyBook(newBook) {\n\n    await this.updateBookSql(newBook)\n    this.getBooksSql();\n\n    // let newGenreArray = this.state.genres;\n    // newBook.genres.map(genre => {\n    //   if (this.isGenreExist(genre) === -1) {\n    //     newGenreArray.push(genre);\n    //   }\n    //   return genre;\n    // });\n\n    // this.setState(prevState => {\n    //   const newState = {\n    //     books: prevState.books.map((book, index) => {\n    //       if (book.id === newBook.id) {\n    //         book = {\n    //           id: newBook.id,\n    //           genres: newBook.genres,\n    //           price: newBook.price,\n    //           tittle: newBook.tittle\n    //         };\n    //       }\n    //       return book;\n    //     }),\n    //     genres: newGenreArray\n    //   };\n    //   return newState;\n    // });\n  }\n\n  handleAddGenre(genre, idBook) {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          if (book.id === idBook) {\n            book = {\n              ...book,\n              genres: book.genres.concat(genre)\n            };\n          }\n          return book;\n        }),\n        genres:\n          this.isGenreExist(genre) === -1\n            ? prevState.genres.concat(genre)\n            : prevState.genres\n      };\n      return newState;\n    });\n  }\n\n  isGenreExist(inputGenre) {\n    const genres = this.state.genres;\n    return genres.indexOf(inputGenre);\n  }\n\n  async handleNewBook(newBook) {\n    let newGenreArray = this.state.genres;\n    await this.addBookSql(newBook)\n    this.getBooksSql();\n\n   // this.getBooksSql();\n    // newBook.genres.map(genre => {\n    //   if (this.isGenreExist(genre) === -1) {\n    //     newGenreArray.push(genre);\n    //   }\n    //   return genre;\n    // });\n    // newBook.id =\n    //   this.state.books.length !== 0\n    //     ? this.state.books[this.state.books.length - 1].id + 1\n    //     : 0;\n    // this.setState(prevState => ({\n    //   books: prevState.books.concat(newBook),\n    //   genres: newGenreArray\n    // }));\n  }\n\n  handleDeleteGenre(idBook, genre) {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          if (book.id === idBook) {\n            book = {\n              ...book,\n              genres: genre\n            };\n          }\n          return book;\n        })\n      };\n      return newState;\n    });\n  }\n\n  handleDeleteGlobalGenre(genreToDelete) {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          book = {\n            ...book,\n            genres: book.genres.filter(function(genre) {\n              return genre !== genreToDelete;\n            })\n          };\n\n          return book;\n        }),\n        genres: prevState.genres.filter(function(genre) {\n          return genre !== genreToDelete;\n        })\n      };\n      return newState;\n    });\n  }\n\n  handleDeleteAllGenre() {\n    this.setState(prevState => {\n      const newState = {\n        books: prevState.books.map((book, index) => {\n          book = {\n            ...book,\n            genres: []\n          };\n\n          return book;\n        }),\n        genres: []\n      };\n      return newState;\n    });\n  }\n\n  async handleDeleteBook(idBook) {\n    await this.deleteBookSql(idBook)\n    this.getBooksSql();\n    // this.getBooksSql();\n\n    // this.setState(prevState => {\n    //   const newState = {\n    //     books: prevState.books.filter(book => book.id !== parseInt(idBook))\n    //   };\n    //   return newState;\n    // });\n  }\n\n  getBooksSql = _ => {\n    fetch('http://localhost:4000/books')\n      .then(response => response.json())\n      .then(response => this.setState({ booksSQL: response.data}))\n      //.then(response => this.getGenres())\n      .then(response => this.getGenresAux())\n      .catch(err => console.error(err))\n  }\n\n  addBookSql = (newBook) => {\n    let auxCall = `http://localhost:4000/Books/add?tittle=${newBook.tittle}`;\n\n    if (newBook.genres[0] !== undefined){\n      auxCall += \"&genre1=\" + newBook.genres[0] + \"\";\n    }\n    if (newBook.genres[1] !== undefined){\n      auxCall += \"&genre2=\" + newBook.genres[1] + \"\";\n    }\n    if (newBook.genres[2] !== undefined){\n      auxCall += \"&genre3=\" + newBook.genres[2] + \"\";\n    }\n    fetch(auxCall)\n      .then(response => response.json())\n      .catch((err => console.log(err)))\n  }\n\n  deleteBookSql = (bookId) => {\n    fetch(`http://localhost:4000/Books/delete?id=${bookId}`)\n      .then(response => response.json())\n      .catch((err => console.log(err)))\n  }\n\n  updateBookSql = (bookEditData) => {\n\n    let auxCall = `http://localhost:4000/Books/update?id=${bookEditData.id}&tittle=${bookEditData.tittle}`;\n\n    if (bookEditData.genres[0] !== undefined){\n      auxCall += \"&genre1=\" + bookEditData.genres[0] + \"\";\n    }\n    if (bookEditData.genres[1] !== undefined){\n      auxCall += \"&genre2=\" + bookEditData.genres[1] + \"\";\n    }\n    if (bookEditData.genres[2] !== undefined){\n      auxCall += \"&genre3=\" + bookEditData.genres[2] + \"\";\n    }\n    fetch(auxCall)\n      .then(response => response.json())\n      .catch((err => console.log(err)))\n  }\n\n  render() {\n    const { booksSQL ,genres, genresFiltered, isLoaded } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <Main\n          books={this.getBookList()}\n          booksSQL = {this.getBookList()}\n          genres={genres}\n          genresFiltered={genresFiltered}\n          isLoaded={isLoaded}\n          handleSelectGenre={this.handleSelectGenre}\n          handleDeleteAllGenre={this.handleDeleteAllGenre}\n          handleAddGenre={this.handleAddGenre}\n          handleDeleteBook={this.handleDeleteBook}\n          handleModifyBook={this.handleModifyBook}\n          handleDeleteGenre={this.handleDeleteGenre}\n          handleNewBook={this.handleNewBook}\n          handleDeleteAllBook={this.handleDeleteAllBook}\n          handleDeleteGlobalGenre={this.handleDeleteGlobalGenre}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}