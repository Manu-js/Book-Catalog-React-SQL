{"ast":null,"code":"import _defineProperty from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/manu/Desktop/React-Book-Catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/manu/Desktop/React-Book-Catalog/src/Components/Books/ModalNewBook/Index.js\";\nimport React, { Component } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport GenreList from \"../GenreList/Index\";\nimport AddGenre from \"../AddGenre/Index\";\nimport \"./ModalNewBook.css\";\n\nvar ModalNewBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalNewBook, _Component);\n\n  function ModalNewBook(props) {\n    var _this;\n\n    _classCallCheck(this, ModalNewBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalNewBook).call(this, props));\n    _this.state = {\n      open: false,\n      genresValue: [],\n      newBookData: {\n        tittle: null,\n        price: null,\n        genre1: null,\n        genre2: null,\n        genre3: null\n      }\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleBookAdd = _this.handleBookAdd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteGenre = _this.handleDeleteGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddNewGenre = _this.handleAddNewGenre.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ModalNewBook, [{\n    key: \"handleBookAdd\",\n    value: function handleBookAdd(e) {\n      var handleNewBook = this.props.handleNewBook;\n      var newBookData = this.state.newBookData;\n      handleNewBook(newBookData);\n      var bookReset = {\n        tittle: null,\n        price: null,\n        genre1: null,\n        genre2: null,\n        genre3: null\n      };\n      this.setState({\n        newBookData: bookReset\n      });\n      this.handleClose();\n    }\n  }, {\n    key: \"handleDeleteGenre\",\n    // handleAddNewGenre(text) {\n    //   debugger;\n    //   this.setState(prevState => {\n    //     const newState = {\n    //       newBookData: {\n    //         ...prevState.newBookData,\n    //         genres: prevState.newBookData.genres.concat(text)\n    //       }\n    //     }\n    //     return newState;\n    //   })\n    // }\n    value: function handleDeleteGenre(idBook, genre) {\n      this.setState(function (prevState) {\n        var newState = {\n          newBookData: _objectSpread({}, prevState.newBookData, {\n            genres: genre\n          })\n        };\n        return newState;\n      });\n    }\n  }, {\n    key: \"updateInputValue\",\n    value: function updateInputValue(e) {\n      var newBookData = this.state.newBookData;\n      this.setState({\n        newBookData: _objectSpread({}, newBookData, _defineProperty({}, e.target.name, e.target.value))\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"addButton\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Add book\", React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Add new book\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"tittle\",\n        label: \"Tittle\",\n        name: \"tittle\",\n        value: this.state.newBookData.tittle,\n        onChange: function onChange(evt) {\n          return _this2.updateInputValue(evt);\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        type: \"number\",\n        id: \"price\",\n        label: \"Price\",\n        name: \"price\",\n        value: this.state.newBookData.value,\n        onChange: function onChange(evt) {\n          return _this2.updateInputValue(evt);\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(GenreList, {\n        selectBook: this.state.newBookData,\n        handleAddGenre: this.handleAddNewGenre,\n        handleDeleteGenre: this.handleDeleteGenre,\n        editOption: true,\n        newBook: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(AddGenre, {\n        selectBook: this.state.newBookData,\n        handleAddGenre: this.handleAddNewGenre,\n        genres: this.state.newBookData.genres,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleBookAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Add\"))));\n    }\n  }]);\n\n  return ModalNewBook;\n}(Component);\n\nexport default ModalNewBook;","map":{"version":3,"sources":["/Users/manu/Desktop/React-Book-Catalog/src/Components/Books/ModalNewBook/Index.js"],"names":["React","Component","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","AddIcon","GenreList","AddGenre","ModalNewBook","props","state","open","genresValue","newBookData","tittle","price","genre1","genre2","genre3","handleClickOpen","setState","handleClose","handleBookAdd","bind","handleDeleteGenre","handleAddNewGenre","e","handleNewBook","bookReset","idBook","genre","prevState","newState","genres","target","name","value","evt","updateInputValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport GenreList from \"../GenreList/Index\";\nimport AddGenre from \"../AddGenre/Index\";\nimport \"./ModalNewBook.css\";\n\nclass ModalNewBook extends Component {\n  constructor(props) {\n    super(props);\n    this.handleBookAdd = this.handleBookAdd.bind(this);\n    this.handleDeleteGenre = this.handleDeleteGenre.bind(this);\n    this.handleAddNewGenre = this.handleAddNewGenre.bind(this);\n  }\n  state = {\n    open: false,\n    genresValue: [],\n    newBookData: {\n      tittle: null,\n      price: null,\n      genre1: null,\n      genre2: null,\n      genre3: null,\n\n    },\n\n  };\n  handleBookAdd(e) {\n    const { handleNewBook } = this.props;\n    const { newBookData } = this.state\n    handleNewBook(newBookData);\n    const bookReset = {\n      tittle: null,\n      price: null,\n      genre1: null,\n      genre2: null,\n      genre3: null,\n    };\n    this.setState({newBookData:bookReset})\n    this.handleClose();\n  }\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  // handleAddNewGenre(text) {\n  //   debugger;\n  //   this.setState(prevState => {\n  //     const newState = {\n  //       newBookData: {\n  //         ...prevState.newBookData,\n  //         genres: prevState.newBookData.genres.concat(text)\n  //       }\n  //     }\n  //     return newState;\n  //   })\n  // }\n  handleDeleteGenre(idBook, genre) {\n    this.setState(prevState => {\n      const newState = {\n        newBookData: {\n          ...prevState.newBookData,\n          genres: genre\n        }\n      }\n      return newState;\n    })\n  }\n  updateInputValue(e) {\n    const { newBookData } = this.state;\n    this.setState({\n      newBookData: {\n        ...newBookData,\n        [e.target.name]: e.target.value\n      }\n    });\n  }\n  render() {\n\n    return (\n      <div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"addButton\"\n          onClick={this.handleClickOpen}>\n          Add book<AddIcon />\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add new book</DialogTitle>\n          <DialogContent>\n            <TextField\n              id=\"tittle\"\n              label=\"Tittle\"\n              name=\"tittle\"\n              value={this.state.newBookData.tittle}\n              onChange={evt => this.updateInputValue(evt)}\n              margin=\"normal\"\n              fullWidth\n            />\n            <TextField\n              type=\"number\"\n              id=\"price\"\n              label=\"Price\"\n              name=\"price\"\n              value={this.state.newBookData.value}\n              onChange={evt => this.updateInputValue(evt)}\n              margin=\"normal\"\n              fullWidth\n            />\n\n            <GenreList\n              selectBook={this.state.newBookData}\n              handleAddGenre={this.handleAddNewGenre}\n              handleDeleteGenre={this.handleDeleteGenre}\n              editOption={true}\n              newBook={true}\n            />\n            <AddGenre\n              selectBook={this.state.newBookData}\n              handleAddGenre={this.handleAddNewGenre}\n              genres={this.state.newBookData.genres}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClose} >\n              Cancel\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleBookAdd}>\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default ModalNewBook;"]},"metadata":{},"sourceType":"module"}